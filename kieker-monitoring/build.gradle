apply plugin: 'eclipse'
apply plugin: "com.github.hauner.jarTest"

configurations {
	ajc
}

def aspectjVersion = '1.9.5'

repositories { jcenter() }


dependencies {
	clover 'org.openclover:clover:4.2.0'

	compile project(':kieker-common')
	
	compile 'com.rabbitmq:amqp-client:4.2.1'
	compile resolveLibrary('javax.jms-*.jar')
	compile 'org.jctools:jctools-core:2.1.0'
	
	ajc "org.aspectj:aspectjtools:$aspectjVersion"
	compile "org.aspectj:aspectjrt:$aspectjVersion"
	compile "org.aspectj:aspectjweaver:$aspectjVersion"	// for our custom AspectJ weaver (class: AspectJLoader)

	compile resolveLibrary('disl-2.0/disl-server.jar')
	compile resolveLibrary('sigar/sigar-*.jar')

	//compile 'org.apache.kafka:kafka-clients:0.11.0.1'
	
	compile 'org.tukaani:xz:1.6'	// compression algorithms used by the file writers

	compile 'org.apache.cxf:cxf-bundle-minimal:2.6.15'
	compile resolveLibrary('framework-libs/jsr311-api-1.1.1.jar')
	compile resolveLibrary('framework-libs/javax.ws.rs-api-2.0.1.jar')
	compile resolveLibrary('framework-libs/jersey/jersey-server-1.19.jar')
	compile resolveLibrary('framework-libs/jersey/jersey-client-1.19.jar')
	compile resolveLibrary('framework-libs/jersey/jersey-apache-client4-1.19.jar')
	compile resolveLibrary('framework-libs/javax.servlet-*.jar')
	compile resolveLibrary('framework-libs/spring/aopalliance-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-beans-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-context-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-core-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-web-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-webmvc-*.jar')
	
	// testing
	compile 'org.hamcrest:hamcrest-all:1.3'

	compile 'org.javassist:javassist:3.24.1-GA'

	compile 'junit:junit:4.12'

	compile 'org.objenesis:objenesis:2.2'
	
	compile 'org.easymock:easymock:3.4'
	compile 'org.mockito:mockito-core:2.8.9' 
	compile 'org.powermock:powermock-api-mockito2:1.7.+'
	compile 'org.powermock:powermock-api-easymock:1.7.+' 
	compile 'org.powermock:powermock-module-junit4:1.7.+' 
	compile 'org.powermock:powermock-core:1.7.+'
	compile 'org.powermock:powermock-module-junit4-rule:1.7.+' 
	
	// this project depends on the tests of kieker-common, e.g., it requires the class AbstractKiekerTest
	testCompile project (path: ':kieker-common', configuration: 'testArchives')
	testCompile resolveLibrary('framework-libs/spring/spring-beans-*.jar')
	
	compile group: 'com.sun.xml.ws', name: 'jaxws-rt', version: '2.3.2', ext: 'pom'
	compile group: 'javax.jws', name: 'javax.jws-api', version: '1.1'



	testRuntime resolveLibrary('framework-libs/spring/spring-expression-*.jar')

	testRuntime fileTree(dir: rootProject.file('kieker-examples/JavaEEServletContainerExample/jetty/lib'), include: 'jetty-*.jar')
  compile group: 'com.github.oshi', name: 'oshi-core', version: '3.12.2'
}

clover {
	report {
		html=true
	}
	
}

eclipse {
	classpath {
		defaultOutputDir = file('build-eclipse')
	}
}

task iajc(dependsOn: classes) {
    doLast {
        ant.taskdef(
        	resource: 'org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties',
            classpath: configurations.ajc.asPath
        )
        ant.iajc(
        	XlintFile: 'aspectjXlint.properties', 
        	X: 'joinpoints:synchronization', 
        	source: sourceCompatibility, 
        	target: targetCompatibility, 
        	debug: 'true', 
        	destdir: sourceSets.main.output.classesDir) {

        	classpath {
        		pathElement(location: configurations.compile.asPath)
        		pathElement(location: sourceSets.main.output.classesDir)
        	}

            sourceroots {
                pathElement(location: 'src/kieker/monitoring/probe/aspectj')
            }
           
        }
    }   
}

compileJava.mustRunAfter('iajc')
